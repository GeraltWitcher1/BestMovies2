@using BestMovies.WebApp.Services
@using System.Text.Json
@using BestMovies.WebApp.Authorization


<MudMenu Icon="@Icons.Material.Rounded.Person" Color="Color.Inherit" AnchorOrigin="Origin.CenterCenter" TransformOrigin="Origin.TopRight">
    @if (_userInformation?.ClientPrincipal is null)
    {
        <MudMenuItem OnClick="Login" OnTouch="Login" >Login</MudMenuItem>
    }
    else
    {
        <div class="d-flex justify-center align-center pa-4">
            <MudText Typo="Typo.caption" Align="Align.Center">@_userInformation.ClientPrincipal.UserDetails</MudText>
        </div>
        <MudDivider/>
        
        <MudMenuItem Icon="@Icons.Material.Filled.List" OnClick="NavigateToWatchList" OnTouch="NavigateToWatchList">Watch List</MudMenuItem>
        
        <MudMenuItem Icon="@Icons.Material.Filled.Logout" OnClick="Logout" OnTouch="Logout">Logout</MudMenuItem>
    }
    
</MudMenu>

@code {

    [Inject]
    protected NavigationManager Navigation { get; set; } = default!;

    [Inject]
    protected IAuthService AuthService { get; set; } = default!;

    private UserInformation? _userInformation;

    protected override async Task OnInitializedAsync()
    {
        _userInformation = await AuthService.RetrieveUserInformation();
    }
    
    private void NavigateToWatchList()
    {
        if (_userInformation?.ClientPrincipal is null) return;
        
        Navigation.NavigateTo($"/{_userInformation.ClientPrincipal.UserDetails}/watch-list");
    }

    private void Login()
    {
        Navigation.NavigateTo("/.auth/login/google", forceLoad: true);
    }

    private void Logout()
    {
        Navigation.NavigateTo("/.auth/logout", forceLoad: true);
    }
}